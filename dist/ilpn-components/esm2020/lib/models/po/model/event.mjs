export class Event {
    constructor(id, label) {
        this._id = id;
        this._label = label;
        this._nextEvents = new Set();
        this._previousEvents = new Set();
    }
    get id() {
        return this._id;
    }
    get label() {
        return this._label;
    }
    get nextEvents() {
        return this._nextEvents;
    }
    get previousEvents() {
        return this._previousEvents;
    }
    get transition() {
        return this._transition;
    }
    set transition(value) {
        this._transition = value;
    }
    get localMarking() {
        return this._localMarking;
    }
    addNextEvent(event) {
        this._nextEvents.add(event);
        event.addPreviousEvent(this);
    }
    addPreviousEvent(event) {
        this._previousEvents.add(event);
    }
    initializeLocalMarking(size) {
        this._localMarking = new Array(size).fill(0);
    }
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZXZlbnQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi8uLi8uLi9wcm9qZWN0cy9jb21wb25lbnRzL3NyYy9saWIvbW9kZWxzL3BvL21vZGVsL2V2ZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUVBLE1BQU0sT0FBTyxLQUFLO0lBU2QsWUFBWSxFQUFVLEVBQUUsS0FBYztRQUNsQyxJQUFJLENBQUMsR0FBRyxHQUFHLEVBQUUsQ0FBQztRQUNkLElBQUksQ0FBQyxNQUFNLEdBQUcsS0FBSyxDQUFDO1FBQ3BCLElBQUksQ0FBQyxXQUFXLEdBQUcsSUFBSSxHQUFHLEVBQVMsQ0FBQztRQUNwQyxJQUFJLENBQUMsZUFBZSxHQUFHLElBQUksR0FBRyxFQUFTLENBQUM7SUFDNUMsQ0FBQztJQUVELElBQUksRUFBRTtRQUNGLE9BQU8sSUFBSSxDQUFDLEdBQUcsQ0FBQztJQUNwQixDQUFDO0lBRUQsSUFBSSxLQUFLO1FBQ0wsT0FBTyxJQUFJLENBQUMsTUFBTSxDQUFDO0lBQ3ZCLENBQUM7SUFFRCxJQUFJLFVBQVU7UUFDVixPQUFPLElBQUksQ0FBQyxXQUFXLENBQUM7SUFDNUIsQ0FBQztJQUVELElBQUksY0FBYztRQUNkLE9BQU8sSUFBSSxDQUFDLGVBQWUsQ0FBQztJQUNoQyxDQUFDO0lBRUQsSUFBSSxVQUFVO1FBQ1YsT0FBTyxJQUFJLENBQUMsV0FBVyxDQUFDO0lBQzVCLENBQUM7SUFFRCxJQUFJLFVBQVUsQ0FBQyxLQUE2QjtRQUN4QyxJQUFJLENBQUMsV0FBVyxHQUFHLEtBQUssQ0FBQztJQUM3QixDQUFDO0lBRUQsSUFBSSxZQUFZO1FBQ1osT0FBTyxJQUFJLENBQUMsYUFBYSxDQUFDO0lBQzlCLENBQUM7SUFFTSxZQUFZLENBQUMsS0FBWTtRQUM1QixJQUFJLENBQUMsV0FBVyxDQUFDLEdBQUcsQ0FBQyxLQUFLLENBQUMsQ0FBQztRQUM1QixLQUFLLENBQUMsZ0JBQWdCLENBQUMsSUFBSSxDQUFDLENBQUM7SUFDakMsQ0FBQztJQUVTLGdCQUFnQixDQUFDLEtBQVk7UUFDbkMsSUFBSSxDQUFDLGVBQWUsQ0FBQyxHQUFHLENBQUMsS0FBSyxDQUFDLENBQUM7SUFDcEMsQ0FBQztJQUVNLHNCQUFzQixDQUFDLElBQVk7UUFDdEMsSUFBSSxDQUFDLGFBQWEsR0FBRyxJQUFJLEtBQUssQ0FBUyxJQUFJLENBQUMsQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDLENBQUM7SUFDekQsQ0FBQztDQUNKIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtUcmFuc2l0aW9ufSBmcm9tICcuLi8uLi9wbi9tb2RlbC90cmFuc2l0aW9uJztcclxuXHJcbmV4cG9ydCBjbGFzcyBFdmVudCB7XHJcbiAgICBwcml2YXRlIHJlYWRvbmx5IF9pZDogc3RyaW5nO1xyXG4gICAgcHJpdmF0ZSByZWFkb25seSBfbGFiZWw6IHN0cmluZyB8IHVuZGVmaW5lZDtcclxuICAgIHByaXZhdGUgcmVhZG9ubHkgX25leHRFdmVudHM6IFNldDxFdmVudD47XHJcbiAgICBwcml2YXRlIHJlYWRvbmx5IF9wcmV2aW91c0V2ZW50czogU2V0PEV2ZW50PjtcclxuXHJcbiAgICBwcml2YXRlIF90cmFuc2l0aW9uOiB1bmRlZmluZWQgfCBUcmFuc2l0aW9uO1xyXG4gICAgcHJpdmF0ZSBfbG9jYWxNYXJraW5nOiB1bmRlZmluZWQgfCBBcnJheTxudW1iZXI+O1xyXG5cclxuICAgIGNvbnN0cnVjdG9yKGlkOiBzdHJpbmcsIGxhYmVsPzogc3RyaW5nKSB7XHJcbiAgICAgICAgdGhpcy5faWQgPSBpZDtcclxuICAgICAgICB0aGlzLl9sYWJlbCA9IGxhYmVsO1xyXG4gICAgICAgIHRoaXMuX25leHRFdmVudHMgPSBuZXcgU2V0PEV2ZW50PigpO1xyXG4gICAgICAgIHRoaXMuX3ByZXZpb3VzRXZlbnRzID0gbmV3IFNldDxFdmVudD4oKTtcclxuICAgIH1cclxuXHJcbiAgICBnZXQgaWQoKTogc3RyaW5nIHtcclxuICAgICAgICByZXR1cm4gdGhpcy5faWQ7XHJcbiAgICB9XHJcblxyXG4gICAgZ2V0IGxhYmVsKCk6IHN0cmluZyB8IHVuZGVmaW5lZCB7XHJcbiAgICAgICAgcmV0dXJuIHRoaXMuX2xhYmVsO1xyXG4gICAgfVxyXG5cclxuICAgIGdldCBuZXh0RXZlbnRzKCk6IFNldDxFdmVudD4ge1xyXG4gICAgICAgIHJldHVybiB0aGlzLl9uZXh0RXZlbnRzO1xyXG4gICAgfVxyXG5cclxuICAgIGdldCBwcmV2aW91c0V2ZW50cygpOiBTZXQ8RXZlbnQ+IHtcclxuICAgICAgICByZXR1cm4gdGhpcy5fcHJldmlvdXNFdmVudHM7XHJcbiAgICB9XHJcblxyXG4gICAgZ2V0IHRyYW5zaXRpb24oKTogVHJhbnNpdGlvbiB8IHVuZGVmaW5lZCB7XHJcbiAgICAgICAgcmV0dXJuIHRoaXMuX3RyYW5zaXRpb247XHJcbiAgICB9XHJcblxyXG4gICAgc2V0IHRyYW5zaXRpb24odmFsdWU6IFRyYW5zaXRpb24gfCB1bmRlZmluZWQpIHtcclxuICAgICAgICB0aGlzLl90cmFuc2l0aW9uID0gdmFsdWU7XHJcbiAgICB9XHJcblxyXG4gICAgZ2V0IGxvY2FsTWFya2luZygpOiBBcnJheTxudW1iZXI+IHwgdW5kZWZpbmVkIHtcclxuICAgICAgICByZXR1cm4gdGhpcy5fbG9jYWxNYXJraW5nO1xyXG4gICAgfVxyXG5cclxuICAgIHB1YmxpYyBhZGROZXh0RXZlbnQoZXZlbnQ6IEV2ZW50KSB7XHJcbiAgICAgICAgdGhpcy5fbmV4dEV2ZW50cy5hZGQoZXZlbnQpO1xyXG4gICAgICAgIGV2ZW50LmFkZFByZXZpb3VzRXZlbnQodGhpcyk7XHJcbiAgICB9XHJcblxyXG4gICAgcHJvdGVjdGVkIGFkZFByZXZpb3VzRXZlbnQoZXZlbnQ6IEV2ZW50KSB7XHJcbiAgICAgICAgdGhpcy5fcHJldmlvdXNFdmVudHMuYWRkKGV2ZW50KTtcclxuICAgIH1cclxuXHJcbiAgICBwdWJsaWMgaW5pdGlhbGl6ZUxvY2FsTWFya2luZyhzaXplOiBudW1iZXIpIHtcclxuICAgICAgICB0aGlzLl9sb2NhbE1hcmtpbmcgPSBuZXcgQXJyYXk8bnVtYmVyPihzaXplKS5maWxsKDApO1xyXG4gICAgfVxyXG59XHJcbiJdfQ==